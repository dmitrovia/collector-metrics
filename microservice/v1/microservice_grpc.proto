syntax = "proto3";

package microservice.v1;

option go_package = "github.com/dmitrovia/collector-metrics/pkg/microservice/v1";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "microservice/v1/metric.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Echo API";
    version: "1.0";
    description: "";
    contact: {
      name: "gRPC-Gateway project";
      url: "https://github.com/grpc-ecosystem/grpc-gateway";
      email: "none@example.com";
    };
    license: {
      name: "BSD 3-Clause License";
      url: "https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE";
    };
  };
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};

service MicroService {
  rpc Sender(SenderRequest) returns (SenderResponse) {
    option (google.api.http) = {
        post: "/v1/updates"
        body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        summary: "Set metrics.";
        operation_id: "setMetrics";
        tags: "echo";
        responses: {
            key: "200"
        }
    };
  }
}