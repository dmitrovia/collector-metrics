# See https://golangci-lint.run/usage/linters/

linters:
  enable-all: true
  disable:
    # Note: deprecated linters
    - gomnd
    - execinquery
    - exportloopref
    - forbidigo
    # gosimple

linters-settings:
  depguard:
    rules:
      main:
        list-mode: lax
        files:
          - "!**/*_a _file.go"
        allow:
          - $gostd
          - github.com/OpenPeeDeeP
        deny:
          - pkg: "github.com/sirupsen/logrus"
            desc: not allowed
          - pkg: "github.com/pkg/errors"
            desc: Should be replaced by standard lib errors package

  lll:
    line-length: 140
    tab-width: 1

  exhaustruct:
    include:
      - '.+\.Test'
      - 'example\.com/package\.ExampleStruct[\d]{1,2}'
    exclude:
      - '.+/cobra\.Command$'

  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - errors.Join(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
    ignoreSigRegexps:
      - \.New.*Error\(
    ignorePackageGlobs:
      - encoding/*
      - github.com/pkg/*
    ignoreInterfaceRegexps:
      - ^(?i)c(?-i)ach(ing|e)


  forbidigo:

    forbid:
      - ^print.*$
      - p: ^fmt\.Print.*$
        msg: Do not commit print statements.
      - 'fmt\.Print.*(# Do not commit print statements\.)?'
      - ^spew\.(ConfigState\.)?Dump$
      - p: ^v1.Dump$
        pkg: ^example.com/pkg/api/v1$
    exclude-godoc-examples: false
    analyze-types: true


  testifylint:
    enable-all: true
    disable:
      - blank-import
      - bool-compare
      - compares
      - empty
      - error-is-as
      - error-nil
      - expected-actual
      - float-compare
      - formatter
      - go-require
      - len
      - negative-positive
      - nil-compare
      - require-error
      - suite-broken-parallel
      - suite-dont-use-pkg
      - suite-extra-assert-call
      - suite-subtest-run
      - suite-thelper
      - useless-assert
    disable-all: true
    enable:
      - blank-import
      - bool-compare
      - compares
      - empty
      - error-is-as
      - error-nil
      - expected-actual
      - float-compare
      - formatter
      - go-require
      - len
      - negative-positive
      - nil-compare
      - require-error
      - suite-broken-parallel
      - suite-dont-use-pkg
      - suite-extra-assert-call
      - suite-subtest-run
      - suite-thelper
      - useless-assert
    bool-compare:
      ignore-custom-types: true
    expected-actual:
      pattern: ^expected
    formatter:
      check-format-string: false
      require-f-funcs: true
    go-require:
      ignore-http-handlers: true
    require-error:
      fn-pattern: ^(Errorf?|NoErrorf?)$
    suite-extra-assert-call:
      mode: require